#summary Details on closeItem() API function
#sidebar ApiFunctions

Call this function to close an item on Delcampe website.<br>
You cannot close an auction item with a bid on it.<br> 
You have to specify the reason of the closing by selecting one of the valid reasons.

This function call will be placed in a queue and processed later.


=== Call ===

 * syntax : closeItem(string token, integer idItem, string reason)

 * parameter 1 : _string_  : secret token
 * parameter 2 : _integer_ : id of the item you want to close
 * parameter 3 : _string_  : reason why you want to close the item. Call [getAuthorizedCloseItemReasons]() to get a list of valid reasons

 * SOAP envelope
{{{
<SOAP-ENV:Envelope SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<SOAP-ENV:Body>
<SOAP-ENV:closeItem>
  <token xsi:type="xsd:string">e6c95bd2eb4cc458710106ecae9cde90</token>
  <idItem xsi:type="xsd:int">99664633</idItem>
  <reason xsi:type="xsd:string">TestItem</reason>
</SOAP-ENV:closeItem>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
}}}

=== Response ===
 * ResponseSimple, giving you more information on the function call result 

 * SOAP envelope
{{{
<SOAP-ENV:Envelope SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<SOAP-ENV:Body>
<SOAP-ENV:closeItemResponse>
  <closeItemReturn xsi:type="ns1:ResponseSimple">
    <status xsi:type="xsd:boolean">true</status>
    <errorMsg xsi:nil="true"/>
    <data xsi:type="xsd:string">Your request was taken into account!</data>
    <persRef xsi:nil="true"/>
  </closeItemReturn>
</SOAP-ENV:closeItemResponse>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
}}}

=== Notification ===
 * [Notifications#Seller_Item_Close_Manually Seller_Item_Close_Manually]

=== Code example (PHP) ===
{{{
//FUNCTION CALL
$objSoapClient = new SoapClient('http://api.delcampe.net/soap.php?wsdl');
$return = $objSoapClient->authenticateUser('MyPersonalApiKey');

if ($return->status === true) {
  $return = $objSoapClient->closeItem($return->data, 96485615, 'TestItem');

  if ($return->status === true) {
    var_export($return->data, 1);
  } else {
    var_export($return->errorMsg, 1);
  } 
}
}}}