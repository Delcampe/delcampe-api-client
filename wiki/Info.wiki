#summary Informations

= Introduction =

You'll find here information about the new version of Delcampe's API, using SOAP technology, standards XML notifications, and providing more info and documentation to you, developers.

The goal of Delcampe's API is to provide an automatic way to manage your items on Delcampe's website. So, the API is for big sellers who have a lot of items on sale on the website.


= What can I do with this API ? =
  * put an item on sale (auction or fixed price)
  * have a list of all my items on sale (with filters)
  * modify an item and its images
  * close an item
  * manage my notifications settings
  * get Delcampe's category list
  * ...
  

= Sample Clients =
== Php == 
=== With PECL (native in php) ===
{{{
<?php
$objSoapClient = new SoapClient('http://api.delcampe.net/soap.php?wsdl');
?>
}}}
=== With Zend_Framework ===
{{{
<?php
Zend_Loader::loadClass('Zend_Soap_Client');
$objSoapClient = new Zend_Soap_Client('http://api.delcampe.net/soap.php?wsdl');
?>
}}}
=== With nuSoap ===
{{{
<?php
require_once('nusoap.php');
?>
}}}
== Perl == 

{{{
#!/usr/bin/perl

use SOAP::Lite;
use SOAP::WSDL;
use strict;
use warnings;

my $service = SOAP::Lite;
   -> service('http://api.delcampe.net/soap.php?wsdl');

print $service->getServerTime()->result;
}}}

== Ruby ==
{{{
require 'rubygems'
gem 'soap4r'
require 'http-access2'
require 'soap/wsdlDriver'

wsdl = 'http://api.delcampe.net/soap.php?wsdl'
driver = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_drive r
driver.wiredump_dev = $defout

ret = driver.getServerTime()
p ret
}}}

= Documentation on the WSDL file =

 * http://api.delcampe.net/soap.php?wsdl

 * http://xmethods.net/ve2/WSDLAnalyzer.po?wsdlurl=http%3A%2F%2Fapi.delcampe.net%2Fsoap.php%3Fwsdl&submit=submit


= API client on .net =

If you intend to call a PHP SOAP server from a .NET Client, there are a couple of things to be aware of. First of all, I've only got it working in WSDL mode. If anyone have made it work in non-WSDL-mode, I'd be interested in hearing that. In WSDL-mode it works, but both input and output-parameters are wrapped from .NET. 