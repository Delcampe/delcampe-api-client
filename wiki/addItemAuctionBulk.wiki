#summary Details on addItemAuctionBulk() API function
#sidebar ApiFunctions

Call this function to add multiple auction items on Delcampe website at once.

You can send a *maximum of 1000 items at once*. 

The new items will be placed in a queue and processed later.


=== Call ===

 * syntax : addItemAuctionBulk(string token, array dataBulk)

 * parameter 1 : _string_ : secret token
 * parameter 2 : _array_  : array containing arrays of data needed to create the auction items. See [AuthorizedValues] to have details on authorized values for specific fields.

 * SOAP envelope
{{{
<SOAP-ENV:Envelope SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<SOAP-ENV:Body>
<SOAP-ENV:addItemAuctionBulk>
  <token xsi:type="xsd:string">9028a83fbac1233914fbb4932dd19575</token>
  <arrDataBulk SOAP-ENC:arrayType="ns1:Map[2]" xsi:type="SOAP-ENC:Array">
  <item xsi:type="ns1:Map">
    <item>
      <key xsi:type="xsd:string">id_country</key>
      <value xsi:type="xsd:int">0</value>
    </item>
    <item>
      <key xsi:type="xsd:string">id_category</key>
      <value xsi:type="xsd:int">80</value>
    </item>
    <item>
      <key xsi:type="xsd:string">price_starting</key>
      <value xsi:type="xsd:string">13.00</value>
    </item>
    <item>
      <key xsi:type="xsd:string">price_increment</key>
      <value xsi:type="xsd:string">0.68</value>
    </item>
    <item>
      <key xsi:type="xsd:string">currency</key>
      <value xsi:type="xsd:string">EUR</value>
    </item>
    <item>
      <key xsi:type="xsd:string">title</key>
      <value xsi:type="xsd:string">API TEST Item 1</value>
    </item>
    <item>
      <key xsi:type="xsd:string">personal_reference</key>
      <value xsi:type="xsd:string">MyPersRef</value>
    </item>
    <item>
      <key xsi:type="xsd:string">images</key>
      <value xsi:type="xsd:string">http://www.mypics.net/testPicsApi_1.jpg</value>
    </item>
  </item>
  <item xsi:type="ns1:Map">
    <item>
      <key xsi:type="xsd:string">id_country</key>
      <value xsi:type="xsd:int">0</value>
    </item>
    <item>
      <key xsi:type="xsd:string">id_category</key>
      <value xsi:type="xsd:int">80</value>
    </item>
    <item>
      <key xsi:type="xsd:string">price_starting</key>
      <value xsi:type="xsd:string">13.00</value>
    </item>
    <item>
      <key xsi:type="xsd:string">price_increment</key>
      <value xsi:type="xsd:string">0.87</value>
    </item>
    <item>
      <key xsi:type="xsd:string">currency</key>
      <value xsi:type="xsd:string">EUR</value>
    </item>
    <item>
      <key xsi:type="xsd:string">title</key>
      <value xsi:type="xsd:string">API TEST Item 2</value>
    </item>
    <item>
      <key xsi:type="xsd:string">personal_reference</key>
      <value xsi:type="xsd:string">MyPersRef</value>
    </item>
    <item>
      <key xsi:type="xsd:string">images</key>
      <value xsi:type="xsd:string">http://www.mypics.net/testPicsApi_2.jpg</value>
    </item>
  </item>
  </arrDataBulk>
</SOAP-ENV:addItemAuctionBulk>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
}}}

=== Response ===

 * ResponseSimpleBulk, giving you more information on the function call result

 * SOAP envelope
{{{
<SOAP-ENV:Envelope SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<SOAP-ENV:Body>
<SOAP-ENV:addItemAuctionBulkResponse>
  <addItemAuctionBulkReturn xsi:type="ns1:ResponseSimpleBulk">
  <data SOAP-ENC:arrayType="ns1:ResponseSimple[2]" xsi:type="ns1:ArrayOfResponseSimple">
    <item xsi:type="ns1:ResponseSimple">
      <status xsi:type="xsd:boolean">true</status>
      <errorMsg xsi:nil="true"/>
      <data xsi:type="xsd:string">Your request was taken into account!</data>
      <persRef xsi:type="xsd:string">MyPersRef</persRef>
    </item>
    <item xsi:type="ns1:ResponseSimple">
      <status xsi:type="xsd:boolean">true</status>
      <errorMsg xsi:nil="true"/>
      <data xsi:type="xsd:string">Your request was taken into account!</data>
      <persRef xsi:type="xsd:string">MyPersRef</persRef>
    </item>
  </data>
  <status xsi:type="xsd:boolean">true</status>
  <errorMsg xsi:nil="true"/>
  <persRef xsi:nil="true"/>
  </addItemAuctionBulkReturn>
</SOAP-ENV:addItemAuctionBulkResponse>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
}}}

=== Notification === 
 * [Notifications#Seller_Item_Add Seller_Item_Add]

=== Code example (PHP) ===
{{{
for ($i = 0; $i < 100; $i++) {
  // MANDATORY DATA
  $data['id_country']                  = 0;
  $data['id_category']                 = 80;
  $data['price_starting']              = '1.00';
  $data['price_increment']             = '0.01';
  $data['currency']                    = 'EUR';
  $data['title']                       = 'My title';
  $data['personal_reference']          = 'My personal ref';

  //OPTIONAL DATA
  $data['price_reserve']               = '5.00';
  $data['date_end']                    = '2010-07-01 10:00:00';
  $data['duration']                    = 10;
  $data['description']                 = 'My description'
  $data['renew']                       = 2;
  $data['option_lastminutebidding']    = true;
  $data['option_privatebidding']       = false;
  $data['option_subtitle']             = true;
  $data['subtitle']                    = 'My subtitle';
  $data['option_boldtitle']            = true;
  $data['option_highlight']            = false;
  $data['option_coloredborder']        = true;
  $data['option_toplisting']           = false;
  $data['option_topcategory']          = false;
  $data['option_topmain']              = false;
  $data['option_keepoptionsonrenewal'] = true;
  $data['prefered_end_day']            = 'mon';
  $data['prefered_end_hour']           = '15:00';

  //OPTIONAL IMAGES
  $data['images']                      = array('http://www.mypictures.com/pic1.jpg',
                                               'http://www.mypictures.com/pic2.jpg',
	                                       'http://www.mypictures.com/pic3.jpg'
                                              );

  $dataBulk[] = $data;
}

//FUNCTION CALL
$objSoapClient = new SoapClient('http://api.delcampe.net/soap.php?wsdl');
$return = $objSoapClient->authenticateUser('MyPersonalApiKey');

if ($return->status === true) {
  $return = $objSoapClient->addItemAuctionBulk($return->data, $dataBulk);

    if (false === $return->status) {
        //Insert KO 
        if (!is_null($return->data)) {    
            //To list items in error, based on the personal reference of each item
            foreach ($return->data as $data) {
                if (false === $data->status) {
                    printVar($data->errorMsg . ' for Item :' . $data->persRef);
                }                    
            }
        } else {
            //General error (not authorized to call this method, too much items to insert, ...)
            printVar($return->errorMsg);
        }     
    } else {
        //Insert OK
        printVar($return->data[0]->data);
    }
}
}}}